widgets.EssenceRichTextView = ElementsEditor.EssenceView.extend({
  className: 'property field essenceRichTextView',

  yield: "<textarea id='{{inputId}}' name='{{name}}' cols='{{cols}}' rows='{{rows}}' class='wymeditor widest'>{{value}}</textarea>",

  togglable: true,

  initialize: function() {
    ElementsEditor.EssenceView.prototype.initialize.apply(this, arguments);

    this.bind('view:toggle', function() {
      el.find('.wym_box').slideToggle();
    }, this);

    this.parent.bind('view:DOMNodeInserted', function onNodeInserted() {
      this.parent.unbind('view:DOMNodeInserted', onNodeInserted);

      WYMeditor.init();

      this.textarea = this.$('textarea.wymeditor');

      var index = $((this.textarea.next('.wym_box').find('iframe').attr('id')||'').split('_')).last().get(0);
      this.editor = WYMeditor.INSTANCES[index];

      var maximum = this.property.get('maximum');
      if(maximum && maximum <= 1000)
        this.$('iframe').css('height', '200px');

      /*
       * The editor loses unpersisted content on sorting, 
       * store the content on start and restore it on stop sorting.
       */
      var self = this,
          parents = $(this.el).parents('.ui-sortable');

      if(parents.size()) {
        // store content in textarea
        parents.bind("sortstart", function(event, ui) {
          self.editor.update();
        });
        // restore content
        parents.bind("sortstop", function(event, ui) {
          // It doesn't work without setTimeout, I don`t know why...
          window.setTimeout(function() { self.editor.html( self.textarea.val() ); }, 200);
        });
      }

      this.fixEditorSize();
    }, this);

  },

  fixEditorSize: function() {
    var wymBox = this.$('.wym_box'),
        iframe = this.$('iframe');

    wymBox.width(wymBox.width() - 11);
    iframe.width(iframe.width() - 11);
  }

});
/* vim: set filetype=javascript: */
